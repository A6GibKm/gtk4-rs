// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use gdk;
use gdk_wayland_sys;
use glib::translate::*;
use glib::GString;
use std::fmt;

glib_wrapper! {
    pub struct WaylandDevice(Object<gdk_wayland_sys::GdkWaylandDevice, gdk_wayland_sys::GdkWaylandDeviceClass>) @extends gdk::Device;

    match fn {
        get_type => || gdk_wayland_sys::gdk_wayland_device_get_type(),
    }
}

impl WaylandDevice {
    pub fn get_node_path(&self) -> Option<GString> {
        unsafe {
            from_glib_none(gdk_wayland_sys::gdk_wayland_device_get_node_path(
                self.to_glib_none().0,
            ))
        }
    }
}

impl fmt::Display for WaylandDevice {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "WaylandDevice")
    }
}
