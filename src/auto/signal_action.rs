// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use glib::translate::*;
use glib::GString;
use gtk_sys;
use std::fmt;
use ShortcutAction;

glib_wrapper! {
    pub struct SignalAction(Object<gtk_sys::GtkSignalAction, gtk_sys::GtkSignalActionClass, SignalActionClass>) @extends ShortcutAction;

    match fn {
        get_type => || gtk_sys::gtk_signal_action_get_type(),
    }
}

impl SignalAction {
    pub fn new(signal_name: &str) -> SignalAction {
        assert_initialized_main_thread!();
        unsafe { from_glib_full(gtk_sys::gtk_signal_action_new(signal_name.to_glib_none().0)) }
    }

    pub fn get_signal_name(&self) -> Option<GString> {
        unsafe {
            from_glib_none(gtk_sys::gtk_signal_action_get_signal_name(
                self.to_glib_none().0,
            ))
        }
    }
}

impl fmt::Display for SignalAction {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "SignalAction")
    }
}
