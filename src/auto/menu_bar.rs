// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use Buildable;
use Container;
use MenuShell;
use Widget;
use glib::object::Cast;
use glib::translate::*;
use gtk_sys;
use std::fmt;

glib_wrapper! {
    pub struct MenuBar(Object<gtk_sys::GtkMenuBar, gtk_sys::GtkMenuBarClass, MenuBarClass>) @extends MenuShell, Container, Widget, @implements Buildable;

    match fn {
        get_type => || gtk_sys::gtk_menu_bar_get_type(),
    }
}

impl MenuBar {
    pub fn new() -> MenuBar {
        assert_initialized_main_thread!();
        unsafe {
            Widget::from_glib_none(gtk_sys::gtk_menu_bar_new()).unsafe_cast()
        }
    }

    //pub fn new_from_model(model: /*Ignored*/&gio::MenuModel) -> MenuBar {
    //    unsafe { TODO: call gtk_sys:gtk_menu_bar_new_from_model() }
    //}
}

impl Default for MenuBar {
    fn default() -> Self {
        Self::new()
    }
}

pub const NONE_MENU_BAR: Option<&MenuBar> = None;

impl fmt::Display for MenuBar {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "MenuBar")
    }
}
