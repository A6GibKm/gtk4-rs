// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use Accessible;
use CellAccessible;
use RendererCellAccessible;
use atk;
use ffi;
use glib::translate::*;
use std::fmt;

glib_wrapper! {
    pub struct TextCellAccessible(Object<ffi::GtkTextCellAccessible, ffi::GtkTextCellAccessibleClass, TextCellAccessibleClass>) @extends RendererCellAccessible, CellAccessible, Accessible, atk::Object;

    match fn {
        get_type => || ffi::gtk_text_cell_accessible_get_type(),
    }
}

impl TextCellAccessible {}

pub const NONE_TEXT_CELL_ACCESSIBLE: Option<&TextCellAccessible> = None;

impl fmt::Display for TextCellAccessible {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "TextCellAccessible")
    }
}
