// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use glib::translate::*;
use gtk_sys;
use std::fmt;
use ShortcutTrigger;

glib_wrapper! {
    pub struct MnemonicTrigger(Object<gtk_sys::GtkMnemonicTrigger, gtk_sys::GtkMnemonicTriggerClass, MnemonicTriggerClass>) @extends ShortcutTrigger;

    match fn {
        get_type => || gtk_sys::gtk_mnemonic_trigger_get_type(),
    }
}

impl MnemonicTrigger {
    pub fn new(keyval: u32) -> MnemonicTrigger {
        assert_initialized_main_thread!();
        unsafe { from_glib_full(gtk_sys::gtk_mnemonic_trigger_new(keyval)) }
    }

    pub fn get_keyval(&self) -> u32 {
        unsafe { gtk_sys::gtk_mnemonic_trigger_get_keyval(self.to_glib_none().0) }
    }
}

impl fmt::Display for MnemonicTrigger {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "MnemonicTrigger")
    }
}
