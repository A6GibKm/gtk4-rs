// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use glib::translate::*;
use gsk_sys;
use std::fmt;
use RenderNode;
use Shadow;

glib_wrapper! {
    pub struct ShadowNode(Object<gsk_sys::GskShadowNode, ShadowNodeClass>) @extends RenderNode;

    match fn {
        get_type => || gsk_sys::gsk_shadow_node_get_type(),
    }
}

impl ShadowNode {
    pub fn get_child(&self) -> Option<RenderNode> {
        unsafe { from_glib_none(gsk_sys::gsk_shadow_node_get_child(self.to_glib_none().0)) }
    }

    pub fn get_n_shadows(&self) -> usize {
        unsafe { gsk_sys::gsk_shadow_node_get_n_shadows(self.to_glib_none().0) }
    }

    pub fn peek_shadow(&self, i: usize) -> Option<Shadow> {
        unsafe {
            from_glib_none(gsk_sys::gsk_shadow_node_peek_shadow(
                self.to_glib_none().0,
                i,
            ))
        }
    }
}

impl fmt::Display for ShadowNode {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "ShadowNode")
    }
}
