// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use glib::translate::*;
use gtk_sys;
use std::fmt;
use LayoutManager;

glib_wrapper! {
    pub struct CustomLayout(Object<gtk_sys::GtkCustomLayout, gtk_sys::GtkCustomLayoutClass, CustomLayoutClass>) @extends LayoutManager;

    match fn {
        get_type => || gtk_sys::gtk_custom_layout_get_type(),
    }
}

impl CustomLayout {
    //pub fn new<P: Fn(&Widget) -> SizeRequestMode + 'static, Q: Fn(&Widget, &Orientation, i32, i32, i32, i32, i32) + 'static, R: Fn(&Widget, i32, i32, i32) + 'static>(request_mode: P, measure: Q, allocate: R) -> CustomLayout {
    //    unsafe { TODO: call gtk_sys:gtk_custom_layout_new() }
    //}
}

pub const NONE_CUSTOM_LAYOUT: Option<&CustomLayout> = None;

impl fmt::Display for CustomLayout {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "CustomLayout")
    }
}
