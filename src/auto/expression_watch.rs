// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use glib;
use glib::translate::*;
use gtk_sys;

glib_wrapper! {
    #[derive(Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]
    pub struct ExpressionWatch(Shared<gtk_sys::GtkExpressionWatch>);

    match fn {
        ref => |ptr| gtk_sys::gtk_expression_watch_ref(ptr),
        unref => |ptr| gtk_sys::gtk_expression_watch_unref(ptr),
    }
}

impl ExpressionWatch {
    pub fn evaluate(&self, value: &mut glib::Value) -> bool {
        unsafe {
            from_glib(gtk_sys::gtk_expression_watch_evaluate(
                self.to_glib_none().0,
                value.to_glib_none_mut().0,
            ))
        }
    }

    pub fn unwatch(&self) {
        unsafe {
            gtk_sys::gtk_expression_watch_unwatch(self.to_glib_none().0);
        }
    }
}
