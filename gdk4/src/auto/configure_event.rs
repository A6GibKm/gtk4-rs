// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use gdk_sys;
use glib::translate::*;
use std::fmt;
use std::mem;
use Event;

glib_wrapper! {
    pub struct ConfigureEvent(Object<gdk_sys::GdkConfigureEvent>) @extends Event;

    match fn {
        get_type => || gdk_sys::gdk_configure_event_get_type(),
    }
}

impl ConfigureEvent {
    pub fn get_size(&self) -> (i32, i32) {
        unsafe {
            let mut width = mem::MaybeUninit::uninit();
            let mut height = mem::MaybeUninit::uninit();
            gdk_sys::gdk_configure_event_get_size(
                self.to_glib_none().0,
                width.as_mut_ptr(),
                height.as_mut_ptr(),
            );
            let width = width.assume_init();
            let height = height.assume_init();
            (width, height)
        }
    }
}

impl fmt::Display for ConfigureEvent {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "ConfigureEvent")
    }
}
